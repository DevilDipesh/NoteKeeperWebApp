@using NoteKeeperWebApp.Infrastructure
@model NoteKeeperWebApp.Note

@{
    ViewBag.Title = "updateNote";
}

<h2>Update Note</h2>


@using (Html.BeginForm("updateNote", "Home", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Note</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.NotesID, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.NotesID, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.NotesID, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Note1, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.Note1, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Note1, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.userID, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.userID, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.userID, "", new { @class = "text-danger" })
        </div>
    </div>
    @if (Model.PostedBy == (string)Session["User"])
    {
        <div class="form-group">
            @Html.LabelFor(model => model.share, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.share, Html.shareNote((string)Session["User"]), new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.share, "", new { @class = "text-danger" })
            </div>
        </div>
    }

    <div class="form-group">
        @Html.LabelFor(model => model.PostDate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.PostDate, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PostDate, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "GetNotes")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
